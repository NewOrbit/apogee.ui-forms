(function(){
function uiForm(e,t){return{restrict:"A",transclude:!0,terminal:!0,controller:function(){},link:function(r,i,n,a,o){var l=n.controller,m=l?l+".":"";a.controller=l,a.elements={},a.cPrefix=m,i.attr("name",m+"form"),i.attr("ng-submit",m+"form.$valid && "+m+"submit()"),i.attr("ng-class","{ attempted: "+m+"form.$submitted }"),i.attr("novalidate",""),t.form["class"]&&i.addClass(t.form["class"]),i.removeAttr("ui-form");var u=t.form.dataContainer;r[u]=r[u]||{},e(i)(r),o(function(e){i.prepend(e)})}}}function uiFormElement(e,t){return{restrict:"A",require:["uiFormElement","^uiForm"],transclude:!0,terminal:!0,controller:function(){},link:function(r,i,n,a,o){var l=a[0],m=a[1],u=m.cPrefix,s=r.$eval(n.uiFormElement)||{model:n.uiFormElement};if(!s.model)throw"You must provide a field name for form-element";var d={validate:!0},c=angular.extend({},d,s),f=angular.copy(t.element.messages);if(c.required=!utils.isUndefined(n.required),f.required=n.required||f.required,n.match){var p=n.match.split(":");c.match=p[0],f.match=p.splice(1).join()||f.match}var v=t.form.dataContainer,g=u+(v?v+".":"")+c.model,F=c.model.split("."),h=utils.last(F),$=c.name||h[0].toUpperCase()+h.substring(1),q=u+(F.length>1?utils.first(g.split("."))+".":"")+"form."+$;if(l.options=c,l.model=g,l.formFieldName=$,l.elementId="fe_"+utils.uniqueId(),t.element["class"]&&i.addClass(t.element["class"]),c.required&&i.addClass("required"),c.validate){var b=function(e){return angular.element(t.element.templates.validation.entry).text(f[e]).attr("ng-if",q+".$error."+e)},C=angular.element(t.element.templates.validation.container).attr("ng-if",u+"form.$submitted");t.element.validators.forEach(function(e){C.append(b(e))}),i.append(C),i.attr("ng-class","{ invalid: "+q+".$invalid }")}m.elements[c.model]=l,i.removeAttr("ui-form-element"),e(i)(r),o(function(e){i.prepend(e)})}}}function uiFormInput(e){return{restrict:"A",priority:1e3,require:["^uiFormElement","^uiForm"],terminal:!0,link:function(t,r,i,n){var a=n[0],o=n[1];if(r.attr("id",a.elementId),r.attr("name",a.formFieldName),r.attr("ng-model",a.model),a.options.required&&r.attr("required","required"),a.options.match){var l=a.options.match.split(":"),m=l[0],u=(l.splice(1).join(),o.elements[m]);console.log(u),u&&r.attr("ng-match",u.model)}r.removeAttr("ui-form-input"),e(r)(t)}}}function uiFormLabel(e){return{restrict:"A",priority:1e3,require:"^uiFormElement",terminal:!0,link:function(t,r,i,n){n.label=r.text(),r.attr("for",n.elementId),r.removeAttr("ui-form-label"),e(r)(t)}}}function validator_match(e){function t(t,r,i,n){if(n){var a=i.ngMatch;if(a){var o=e(a),l=function(e){var r=o(t),i=e===r;return n.$setValidity("match",i),e};n.$parsers.unshift(l),n.$formatters.push(l),i.$observe("ngMatch",function(){l(n.$viewValue)})}}}var r={link:t,restrict:"A",require:"?ngModel"};return r}var uid=0,utils={isUndefined:function(e){return"undefined"==typeof e},first:function(e){return e&&e.length?e[0]:null},last:function(e){return e&&e.length?e[e.length-1]:null},uniqueId:function(){return uid++}};uiForm.$inject=["$compile","uiFormConfig"];var uiFormConfig={form:{dataContainer:"entity"},element:{validators:["required","email","number","match"],templates:{validation:{container:"<span></span>",entry:"<span></span>"}},messages:{required:"This field is required",email:"Invalid email format",number:"Invalid number format",match:"This field must match: "}}};uiFormElement.$inject=["$compile","uiFormConfig"],uiFormInput.$inject=["$compile"],uiFormLabel.$inject=["$compile"],validator_match.$inject=["$parse"],angular.module("apogee.ui-forms",[]).directive("uiForm",uiForm).directive("uiFormElement",uiFormElement).directive("uiFormInput",uiFormInput).directive("uiFormLabel",uiFormLabel).value("uiFormConfig",uiFormConfig).directive("ngMatch",validator_match);
})();